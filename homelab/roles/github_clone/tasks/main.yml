- name: Check if the GitHub SSH key already exists (it shouldn't on first run)
  ansible.builtin.stat:
    path: "{{ homedir }}/.ssh/{{ ssh_github_key }}"
  register: ssh_github_key_exists

- name: Copy private SSH key for GitHub to the remote host
  ansible.builtin.copy:
    # Fetches env var directly from local environment
    src: "{{ lookup('env', 'HOME') }}/.ssh/{{ ssh_github_key }}"
    # Fetches env var from target host
    dest: "{{ homedir }}/.ssh/{{ ssh_github_key }}"
    owner: "{{ git_user }}"
    group: "{{ git_user }}"
    mode: "0600"
  when: not ssh_github_key_exists.stat.exists

- name: Ensure SSH config directory exists for {{ git_user }}
  ansible.builtin.file:
    path: "{{ homedir }}/.ssh"
    state: directory
    mode: "0700"

- name: Add SSH config entry for GitHub for {{ git_user }}
  ansible.builtin.blockinfile:
    path: "{{ homedir }}/.ssh/config"
    state: present
    create: true
    owner: "{{ git_user }}"
    mode: "0600"
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR GITHUB"
    block: |
      Host github.com
          HostName github.com
          User git
          IdentityFile ~/.ssh/{{ ssh_github_key }}
          IdentitiesOnly yes

- name: Ensure GitHub.com is a known host
  ansible.builtin.known_hosts:
    path: "{{ homedir }}/.ssh/known_hosts"
    name: "github.com"
    key: "{{ lookup('pipe', 'ssh-keyscan github.com') }}"
    state: present

- name: Clone the Homelab repository using SSH into {{ homedir }}
  ansible.builtin.git:
    repo: "git@github.com:{{ github_user }}/{{ github_repo }}.git"
    dest: "{{ homedir }}/{{ github_repo }}"
    version: main
    update: true
