- name: Check if the GitHub SSH key already exists (it shouldn't on first run)
  ansible.builtin.stat:
    path: "{{ homedir }}/.ssh/{{ ssh_github_key }}"
  register: ssh_github_key_exists

- name: Copy private SSH key for GitHub to the remote host
  ansible.builtin.copy:
    # Fetches env var directly from local environment
    src: "{{ lookup('env', 'HOME') }}/.ssh/{{ ssh_github_key }}"
    # Fetches env var from target host
    dest: "{{ homedir }}/.ssh/{{ ssh_github_key }}"
    owner: "{{ git_user }}"
    group: "{{ git_user }}"
    mode: '0600'
  when: ssh_github_key_exists.stat.exists == False

# FIXME: Replace with https://www.chezmoi.io/
# - name: Set Git to use specific SSH key for GitHub
#   become: true
#   become_user: "{{ git_user }}"
#   ansible.builtin.shell: |
#     git config --global core.sshCommand "ssh -i /home/{{ git_user }}/.ssh/{{ ssh_github_key }} -o IdentitiesOnly=yes"
#     git config --global user.name "{{ github_user }}"
#     git config --global user.email "{{ github_email }}"
#   when: docker_github_true

- name: Ensure SSH config directory exists
  ansible.builtin.file:
    path: "{{ homedir }}/.ssh"
    state: directory
    mode: '0700'

- name: Add SSH config entry for GitHub
  ansible.builtin.blockinfile:
    path: "{{ homedir }}/.ssh/config"
    state: present
    create: yes
    mode: '0600'
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR GITHUB"
    block: |
      Host github.com
          HostName github.com
          User git
          IdentityFile ~/.ssh/{{ ssh_github_key }}
          IdentitiesOnly yes

- name: Ensure GitHub.com is a known host
  ansible.builtin.known_hosts:
    path: "{{ homedir }}/.ssh/known_hosts"
    name: "github.com"
    key: "{{ lookup('pipe', 'ssh-keyscan github.com') }}"
    state: present

- name: Clone the Homelab repository using SSH
  ansible.builtin.git:
    repo: 'git@github.com:{{ github_user }}/{{ github_repo }}.git'
    dest: '{{ homedir }}/{{ github_repo }}'
    clone: yes
    update: yes
