- name: Create fact-based groups
  hosts: all
  # This ensures that the groups are created before any role is executed
  tags: always
  tasks:
    #     - name: Classify hosts by their virtualization type
    #       group_by:
    #         key: "{{ ansible_facts['virtualization_type'] }}"
    #       changed_when: false # forces ok status
    #     - name: Debug virtualization type
    #       debug:
    #         msg: "Virtualization type is {{ ansible_facts['virtualization_type'] }}"
    - name: Classify hosts by their OS family
      ansible.builtin.group_by:
        key: "{{ ansible_facts['os_family'] }}"
      changed_when: false # forces ok status

- name: Update system
  hosts: all
  tags: update
  tasks:
    - name: Include update role
      ansible.builtin.include_role:
        name: update

- name: Install packages
  hosts: all
  tags: packages
  tasks:
    - name: Include packages role
      ansible.builtin.include_role:
        name: packages

- name: Initialize user(s)
  hosts: all
  tags: users
  tasks:
    - name: Execute users role
      ansible.builtin.include_role:
        name: users
      vars:
        users_user: "{{ item }}"
      loop: "{{ users }}"
      when: (users | length > 0 and item in users)

- name: Setup ZSH shell
  hosts: all
  tags: zsh
  tasks:
    # Necessary so we know which user to become for the block
    - name: Set fact for zsh_user
      ansible.builtin.set_fact:
        zsh_user: "{{ item }}"
      loop: "{{ ['root'] + users }}"
      register: zsh_users

    # Must become user so "chezmoi init" is run as the user
    - name: Include ZSH role block
      become: true
      become_user: "{{ item }}"
      block:
        - name: Include ZSH role for each user and root
          ansible.builtin.include_role:
            name: zsh
          vars:
            zsh_user: "{{ item }}"
          loop: "{{ zsh_users.results | map(attribute='ansible_facts.zsh_user') | list }}"

- name: Configure GitHub repository under either root or non-root user
  hosts: all
  tags: github_clone
  tasks:
    # Necessary so we know which user to become for the block
    - name: Set fact for homedir and git_user
      ansible.builtin.set_fact:
        homedir: "{{ (users | length > 0) | ternary('/home/' + users | first, '/root') }}"
        git_user: "{{ (users | length > 0) | ternary(users | first, 'root') }}"

    # Must become user so git clone uses the correct SSH identity
    - name: Clone GitHub repository to homedir for {{ git_user }}
      become: true
      become_user: "{{ git_user }}"
      block:
        - name: Include GitHub clone role
          ansible.builtin.include_role:
            name: github_clone
          when: github_clone

- name: Install Docker
  hosts: all
  tags: docker
  tasks:
    - name: Install docker
      ansible.builtin.include_role:
        name: docker
      when: install_docker

    - name: Add to docker group the user {{ users | first }}
      ansible.builtin.user:
        name: "{{ users | first }}"
        groups: docker
        append: true
      when: (users | length > 0)
